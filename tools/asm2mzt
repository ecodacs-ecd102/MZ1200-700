#!/bin/bash

ITNR="[31;1m"
ITNG="[32;1m"
ITNY="[33;1m"
ITNB="[34;1m"
ITNM="[35;1m"
ITNC="[36;1m"
ITNW="[37;1m"
ITN="${ITNY}"
NOR="[0m"

ZASM=/opt/z80/bin/zasm

# Catch errors and display the offending line number:
set -e
trap 'echo "${ITNR}$0 FAILED at line ${LINENO}${NOR}"' ERR

#cd $(dirname $0) ; CWD=$(pwd)

if [ "$1" = "" ]; then
  cat 1>&2 <<EOF

Usage: $0 filename[.asm]

EOF
  exit 1
fi

rm -vf *.BAK *.bak
for f in "$@"; do
  echo "Processing: '$f'"
  p="$(dirname "$f")"
  b="$(basename "$f" .asm)"
  MZN="$(echo "$b" | tr '[:lower:]' '[:upper:]')"
  OUT="$MZN.mzt"
  echo "$OUT"
  HDN="$(echo -n "$MZN$(dd if=/dev/zero bs=1 count=17 2> /dev/null | tr '\000' '\015')" | dd bs=1 count=17 2> /dev/null)"

  if [ ! -e "$p/$b.asm" ]; then
    echo "File not found: $p/$b.asm"
    exit 1
  fi
  pushd "$p" >& /dev/null

  # pre-process
  chmod 644 "$b.asm"
  rmxattr.sh "$b.asm"
  sed -re 's/^dbg\(([0-9]+)\)//g' "$b.asm" | sed -re 's/\$([A-F][0-9A-F]*)/0\1H/ig; s/\$([0-9A-F]+)/\1H/ig' | lv -Iu -Os | sed -e 's/$/\r/g' > "$b.s"

  # build
  find . -iname "$b.bin" -delete
  find . -iname "$b.prn" -delete
  find . -iname "$b.hex" -delete
  $ZASM "-C$b.bin" "-L$b.PRN" -Z "$b.s" 2>&1 | lv -Is -Ou > asm.log
  find . -name  "$b.BIN" -exec mv -f "{}" "$b.bin" \;
  find . -iname "$b.prn" -exec mv -f "{}" "$b.PRN" \;
  lv -Is -Ou "$b.PRN" > "$b.PRNu"
  mv -f "$b.PRNu" "$b.PRN"
  if ! grep -qFe '  0 warning(s),   0 error(s) in assembly.' asm.log; then
    cat asm.log 1>&2
    echo "${ITNY}$b.s: Assemble error !$NOR" 1>&2
    exit 1
  fi
  rm -f asm.log "$b.s"
  SZ=$(stat --print %s "$b.bin")

  # Make mzt header
  ORG="$(grep -iPe '^\s*[0-9A-F]{4}\s+ORG\s+' "$b.PRN" | head -1 | awk -e '{print $1}')"
  OL='\x'${ORG/#??/}
  OH='\x'${ORG/%??/}

  # Type, Name
  echo -n -e "\x01${HDN}" > $OUT

  # Size
  printf -v H '\\x%02x' $(( ( $SZ / 256 ) & 255 ))
  printf -v L '\\x%02x' $(( $SZ & 255 ))
  printf "$L$H" >> $OUT

  # From, Exec
  printf "$OL$OH" >> $OUT
  printf "$OL$OH" >> $OUT

  # Padding
  dd if=/dev/zero bs=1 count=$((128 -24)) >> $OUT 2> /dev/null

  # body
  cat "$b.bin" >> $OUT

#  cp -av $OUT ../SD/
  ls -al *.bin *.mzt
  #hexdump -C $OUT | lv

  popd >& /dev/null
done
